name: CI
on: [push, pull_request]
jobs:
  lint-javascript:
    name: Lint JavaScript
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.4.0'
      - name: Install development JavaScript dependencies
        run: yarn install --production=false
      - name: Run ESLint
        run: yarn lint
  lint-ruby:
    name: Lint Ruby
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.0
      - name: Install development Ruby dependencies
        run: |
          gem install bundler
          bundle config set without 'test production'
          bundle install
      - name: Run RuboCop
        run: bundle exec rubocop --parallel
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      DATABASE_URL: postgres://postgres:@localhost:5432/test
      RAILS_ENV: test
      REDIS_URL: redis://localhost:6379/0
      RUBYOPT: -W:no-deprecated
    services:
      db:
        image: postgres:13
        ports: ['5432:5432']
        env:
          POSTGRES_DB: HackerGateway_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.0
      - uses: actions/setup-node@v3
        with:
          node-version: '20.4.0'
      - name: Install JavaScript dependencies
        run: yarn install
      - name: Build JavaScript
        run: yarn build
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-v2-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-v2-
      - name: Install Ruby dependencies
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle config set without 'production'
          bundle install
      - name: Prepare database
        run: bin/rails db:prepare
      - name: Run tests
        run: bundle exec rspec --profile
